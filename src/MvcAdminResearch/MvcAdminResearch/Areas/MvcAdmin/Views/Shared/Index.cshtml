@model IEnumerable<Object>

@using System.Reflection
@using System.Linq.Expressions
@using MvcAdminResearch.Helpers


@{
    ViewBag.Title = "Index";

    var myObject = Model;
    Type myType = myObject.GetType().GetGenericArguments()[0];

    DataContextHost host = new DataContextHost(myType, typeof(MvcAdminResearch.Models.NotesappContext));
    var propsEligible = ScaffoldHelpers.GetEligibleProperties(myType, host);
    var displayPropertyNames = ScaffoldHelpers.GetDisplayPropertyNames(myType, 5);
    string primaryKeyName = host.ModelProperties.FirstOrDefault(p => p.IsPrimaryKey).Name;
    
}

<h2>@host.EntitySetName</h2>

<p>
    @Html.ActionLink("Create new", "Create", null, new { @class = "btn" })
</p>
<table class="table table-hover">
    <tr>
        @foreach (var propName in displayPropertyNames)
        {
            <th>@Html.DisplayName(propName)</th>
        }
        <th></th>
    </tr>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @foreach (var propName in displayPropertyNames)
                {
                    <th>@myType.GetProperty(propName).GetValue(item)</th>
                }

                @{var priamryKeyValue = myType.GetProperty(primaryKeyName).GetValue(item);
            
                    <td>
                        @Html.ActionLink(" ", "Edit", new { id = priamryKeyValue }, new { @class = "icon-edit" }) 
			            @Html.ActionLink(" ", "Details", new { id = priamryKeyValue }, new { @class = "icon-info-sign" }) 
			            @Html.ActionLink(" ", "Delete", new { id = priamryKeyValue }, new { @class = "icon-trash" })
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
