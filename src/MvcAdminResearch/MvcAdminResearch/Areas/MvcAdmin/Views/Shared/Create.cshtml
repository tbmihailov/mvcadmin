@model Object

@using System.Reflection
@using System.Linq.Expressions
@using MvcAdminResearch.Helpers


@{
    ViewBag.Title = "Create";

    var myObject = Model;
    Type myType = myObject.GetType();

    DataContextHost host = new DataContextHost(myType, typeof(MvcAdminResearch.Models.NotesappContext));
    var propsEligible = ScaffoldHelpers.GetEligibleProperties(myType, host);
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>@myType.Name</legend>
        @foreach (var prop in propsEligible)
        {
            if (!prop.IsPrimaryKey && !prop.IsReadOnly && !prop.IsForeignKey)
            {
            <dl class="dl-horizontal">
                <dt>
                    @Html.Label(prop.Name)
                </dt>
                <dd>
                    @Html.Editor(prop.Name)
                    @Html.ValidationMessage(prop.Name)
                </dd>
            </dl>
            }
            else if (prop.IsForeignKey)
            {
            <dl class="dl-horizontal">
                <dt>
                    @Html.Label(prop.Name)
                </dt>
                <dd>
                    @Html.DropDownList(prop.Name)
                    @Html.ValidationMessage(prop.Name)
                </dd>
            </dl> 
            }
        }
        <div class="control-group">
            <div class="controls">
                <button type="submit" class="btn btn-primary">
                    <i class="icon-ok icon-white"></i>Save
                </button>
                &nbsp; @Html.ActionLink("Cancel", "Index", null, new { @class = "btn" })
            </div>
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
